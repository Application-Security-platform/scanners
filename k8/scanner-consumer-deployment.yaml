apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-consumer
  labels:
    app: scanner-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner-consumer
  template:
    metadata:
      labels:
        app: scanner-consumer
    spec:
      serviceAccountName: scanner-consumer-sa
      containers:
        - name: consumer
          image: scanners:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              apt-get update && \
              apt-get install -y python3-pip && \
              pip install -r /app/requirements.txt && \
              python3 /app/consumer.py
          volumeMounts:
            - name: app-code
              mountPath: /app
            - mountPath: "/data/repos"
              name: repo-storage
            - mountPath: "/data/scripts"
              name: script-storage
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka-service.default.svc.cluster.local:9092"
            - name: MONGODB_URI
              value: "mongodb://mongodb-service:27017"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - python3
                - -c
                - "import socket; socket.socket().connect(('kafka-service', 9092))"
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: app-code
          configMap:
            name: scanner-consumer-scripts 
        - name: repo-storage
          persistentVolumeClaim:
            claimName: repo-storage-pvc
        - name: script-storage
          configMap:
            name: preprocess-scripts
